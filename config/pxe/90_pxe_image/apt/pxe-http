#!/bin/sh -e

pxe_http_hook() {
    # parse kernel cmdline args
    for x in $(cat /proc/cmdline); do
        case $x in
            pxe_http_srv=*)
                export pxe_http_srv=${x#pxe_http_srv=}
                ;;
        esac
    done

    if [ -n "${ip}" ] && [ -n "${pxe_http_srv}" ]; then
        # copy to RAM logic is disabled, as the image will be downloaded to RAM
        export copytoram="n"

        export pxe_http_srv=$(eval echo "${pxe_http_srv}")

        pxe_http_mount_handler
    fi
}

pxe_http_mount_handler() {
    local http_img="${pxe_http_srv%/}/${dist}/${arch}/pxeboot.img"

    echo ":: Boot PXE with HTTP"

    # 1st: check the copy to RAM filesystem is present
    if ! mountpoint -q "${copytoram_mnt}"; then
        echo ":: Mount ${copytoram_mnt} (tmpfs) filesystem, size=${copytoram_size}"
        mkdir -p "${copytoram_mnt}"
        mount -t tmpfs -o "size=${copytoram_size}",mode=0755 copytoram "${copytoram_mnt}"
    fi

    local local_img="${copytoram_mnt}/${dist}/${arch}/pxeboot.img"

    # 2nd: download the image
    echo ":: Download '${http_img}' to '${local_img}'"
    mkdir -p "${local_img%/pxeboot.img}"
    if command -v wget >/dev/null 2>&1; then
        if ! wget -c -O "${local_img}" "${http_img}"; then
            panic "!! ERROR: could not download '${http_img}' to '${local_img}'"
        fi
    else
        if ! curl -L -f -o "${local_img}" "${http_img}"; then
            panic "!! ERROR: could not download '${http_img}' to '${local_img}'"
        fi
    fi

    # 3rd: create the boot mount point for pxe_mount_handler with correct image placement
    echo ":: Bindmount '${copytoram_mnt}' as '${boot_mnt}'"
    mkdir -p "${boot_mnt}"
    if ! mount -o bind "${copytoram_mnt}" "${boot_mnt}"; then
        panic "!! ERROR: failed to mount '${copytoram_mnt}'"
    fi
}
